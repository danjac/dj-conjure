[project]
name = "{{ project_slug }}"
version = "0.1.0"
description = "{{ description }}"
authors = [
    {name = "{{ author_name }}", email = "{{ email }}"},
]
requires-python = "==3.13.*"
readme = "README.md"
license = {text = "{{ license }}"}
dependencies = [
    "django-allauth[socialaccount]>=64.2.0",
    "django-anymail>=11.1",
    "django-cotton>=1.1.1",
    "django-csp>=3.8",
    "django-extensions>=3.2.3",
    "django-fast-update>=0.2.3",
    "django-health-check>=3.18.3",
    "django-htmx>=1.19.0",
    "django-linear-migrations>=2.13.0",
    "django-permissions-policy>=4.21.0",
    "django-redis>=5.4.0",
    "django-tailwind-cli>=2.16.0",
    "django-template-partials>=24.4",
    "django-version-checks>=1.12.0",
    "django>=5.1",
    "environs[django]>=11.0.0",
    "gunicorn>=23.0.0",
    "heroicons[django]>=2.8.0",
    "loguru>=0.7.2",
    "psutil>=6.0.0",
    "psycopg[binary,pool]>=3.2.1",
    "redis>=5.0.8",
    "sentry-sdk>=2.13.0",
    "whitenoise[brotli]>=6.7.0",
]

[tool.uv]
dev-dependencies = [
    "bandit>=1.7.9",
    "coverage>=7.6.1",
    "django-browser-reload>=1.15.0",
    "django-debug-toolbar>=4.4.6",
    "django-stubs-ext>=5.0.4",
    "django-stubs>=5.0.4",
    "factory-boy>=3.3.1",
    "ipython>=8.27.0",
    "pyright>=1.1.380",
    "pytest-cov>=5.0.0",
    "pytest-django>=4.8.0",
    "pytest-env>=1.1.3",
    "pytest-icdiff>=0.9",
    "pytest-mock>=3.14.0",
    "pytest-randomly>=3.15.0",
    "pytest-sugar>=1.0.0",
    "pytest-xdist>=3.6.1",
    "pytest>=8.3.2",
]


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE="config.settings"
addopts = [
    "-v",
    "-x",
    "-p no:warnings",
    "--ff",
    "--cov",
    "--reuse-db",
    "--no-cov-on-fail",
    "--cov-fail-under=100",
    "--cov-report=term-missing",
    "--numprocesses=auto",
    "--tb=short",
]

testpaths = ["{{ project_slug }}", "templates"]
env = [
    "COVERAGE_CORE=sysmon",
    "SECURE_SSL_REDIRECT=false",
    "USE_CONNECTION_POOL=false",
    "USE_COLLECTSTATIC=false",
    "USE_X_FORWARDED_HOST=false",
]

[tool.coverage.run]
source=["{{ project_slug }}"]
omit=[
    "**/config/*",
    "**/migrations/*",
    "*/tests/*",
]


[tool.djlint]
profile = "django"
ignore = "H030,H031,H017,H021"
custom_blocks="cache,partialdef"

[tool.ruff]
target-version = "py312"

lint.select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # mccabe
    "D10", # flake8-debugger
    "DJ", # flake8-django
    "E", # pycodestyle (error)
    "ERA", # eradicate
    "F", # pyflakes
    "FA", # flake8-future-annotations
    "FBT", # flake8-boolean-trap
    "G", # flake8-logging-format
    "I001", # isort
    "INP", # flake8-no-pep420
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PT", # flake8-pytest-style
    "PGH", # pygrep hooks
    "PIE", # flake8-pie
    "PL", # pylint
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # ruff-specific
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "W", # pycodestyle (warning)
]
lint.ignore = [
    "D100",
    "D104",
    "D106",
    "D107",
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D401",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    "E501",
    "E701",
    "Q000",
    "S101",
]

[tool.ruff.lint.per-file-ignores]
"**/apps.py" = ["D101", "D102", "D103", "D105", "PL", "RUF"]
"**/conftest.py" = ["D101", "D102", "D103", "D105", "PL", "RUF"]
"**/migrations/**.py" = ["D101", "D102", "D103", "D105", "E501", "N", "PL", "RUF"]
"**/tests/**.py" = ["D101", "D102", "D103", "D105", "PL", "RUF"]

[tool.ruff.lint.isort]
known-first-party = ["{{ project_slug }}"]

[tool.pyright]
include=["{{ project_slug }}"]
exclude=[
  "**/migrations/*.py",
  "**/tests/*.py",
]

reportAttributeAccessIssue = false
reportIncompatibleVariableOverride = false
